#include <iostream>

using namespace std;

// Point 클래스, Rect 클래스는 은닉된 상태
// 공개된 정보는 Point 생성자와 Rect 생성자가 공개됨
// Rect 클래스에는 사각형 면접 계산 area 함수가 존재

// ---> Rect의 대각선 길이를 구하는 Distance 함수 필요

class Point {	// 기본 private ( 기본값으로 외부 참조 불가 )
public:
	int x;
	int y;

	Point(int a, int b) {
		x = a;
		y = b;
	}

	int getX() { return x; }
	int getY() { return y; }

	void setX(int a) { x = a; }
	void setY(int b) { y = b; }
};

class Rect {
	Point p1, p2;						                            // 멤버 변수
public:

	Rect(Point p_n1, Point p_n2) : p1(p_n1), p2(p_n2) { // 인자가 있는 생성자 ( 인자는 함수의 로컬 변수와 동일)
		p1 = p_n1;
		p2 = p_n2;
	}

	Rect() : p1(0,0), p2(0,0) { }		                    // 디폴트 생성자 (값이 없을 경우)

	void setP1(Point p) { p1 = p; }		                  // setter를 통해 상속하는 클래스의 생성자 초기화 
	void setP2(Point p) { p2 = p; }

	int getX() { return abs(p1.x - p2.x); }	            // getter를 통해 상속하는 클래스의 메소드로 값을 전달 가능
	int getY() { return abs(p1.y - p2.y); }

	int area() {						                            // 멤버 변수 X, 함수 내의 로컬 변수
		int x = abs(p1.x - p2.x);
		int y = abs(p1.y - p2.y);
		return x * y;
	}
};

class RectEx : public Rect {			                    // Rect 클래스를 상속, private 
public:
	RectEx(Point p_n1, Point p_n2) {	                  // Rect 클래스의 Point p1, p2에 접근하기 위해서 setP1을 활용하여 초기화(생성자)
		setP1(p_n1);
		setP2(p_n2);
	}

	double distance() {
		int x = getX();					                          // RectEx 클래스에서 Rect 클래스의 getX 메소드에 접근하여 x 값을 가져옴
		int y = getY();
		return sqrt(pow(x, 2) + pow(y, 2));
	}
};

int func(Rect* r);
int func2(Rect& r);						                        // 레퍼런스 정의(포인터 X, &를 통한 주소 전달)

int main() {
	int n1 = 10, n2 = 20;

	Point p1(n1, n1), p2(n2, n2);
	//Rect r1 = { {10,10}, {20,20} };	                  // struct 타입 초기화

	Rect r1(p1, p2);					                          // Rect 클래스 객체의 초기화(생성자 이용)
	Rect r2;

	func(&r1);							                            // 포인터 변수 전달을 위해 변수(클래스)의 주소 전달
	func2(r1);

	cout << "두 점 p1(10,10)과 p2(20,20)으로 이루어진 사각형의 넓이 (p1, p2 인자가 있는 r1) = " << r1.area() << endl;
	cout << "두 점 p1(10,10)과 p2(20,20)으로 이루어진 사각형의 넓이 (p1, p2 인자가 없는 r2) = " << r2.area() << endl;
	
	return 0;
}

int func(Rect* r1) {
	cout << "두 점 p1(10,10)과 p2(20,20)으로 이루어진 사각형의 넓이 = " << r1->area() << endl;
	return 0;
}										                                  // 포인터 변수를 통한 접근 시에는 -> 사용

int func2(Rect& r1) {
	cout << "두 점 p1(10,10)과 p2(20,20)으로 이루어진 사각형의 넓이 = " << r1.area() << endl;
	return 0;
}										                                  // 레퍼런스로 받은 함수도 . 으로 접근하여 사용


